
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- Commands for Saving Changes =-=-=-=-=-=-=-=-=-=-=-=-=-=-= (Local -> Github)
-----------------------------------------------------------------------------------------
-> So, now on you are aware about how to 'clone' a github Repo on your local system and perform your changes.
-> But did it changed on both local(Computer) and Remote(Github) file ?
-> The Answer is No! any changes performed on the "clone" file doen't reflect on the main file on Github repo.


              Github Repo 
         _______________________
         |      Main File       |
         |______________________|                   Local Computer
                    |                           _____________________ 
                    |___________________________|   Clone file      |
                                                |___________________|
                                          (Any change in the clone file)
                                          (doesn,t affect the main file)



::::::::: But! How to reflect changes? ::::::::::::::::::::
-----------------------------------------------------------
-> The answer is if you perform any changes at your clone file then the changes gets 'Untracked'
   means that no one know about what changes you performed on the file.
-> If you wants to reflect those changes at the main file on github that you have to 'Commit' the changes.


----------------------------------
:::: It is a three step process :::
-----------------------------------

        _____________________                                                                                                   _____________
        |   Changed Code    |-----------> [Add file to stage] ---------------> [Commit with msg] -----------> [Push] -------->  | Main file |
        |___________________|                                                                                                   |___________|
            Clone file                                                                                                             Github



::::::::::::::: Example ::::::::::::::::::
-------------------------------------------------------------------------------------------------------------------------
-> Suppose there is a wedding where every couple wants to click their photograph to keep a proper record.
-> So before clicking pictures everyone comes at the stage one by one and then the photographer click their picture as record.
-> This example is exactly like used in the git where, 

   _______________________________________________________________
   |                                                             |
   |     ( Unclicked couples) --------> Untracked files          |
   |     ( Comes at stage   ) --------> git add <fileName>       |
   |     ( Clicking picture ) --------> git commit -m <message>  |
   |     ( Upload on system ) --------> git push                 |
   |_____________________________________________________________|

-------------------------------------------------------------------------------------------------------------------------



==============================
(1) git status
------------------------------
-> This command is used to show the current status of our changes performed in file. 
-> If the status is untracked then we have to commit those files.
-> There are mainly four types of status we encountered in the Git Github.



=========================================================================
      status          |      Description                                 
-------------------------------------------------------------------------
(1) untracked         | new untracked file
-------------------------------------------------------------------------
(2) modified          | modified existing file 
-------------------------------------------------------------------------
(3) staged            | file ready to commit (stage point)
-------------------------------------------------------------------------
(4) unmodified        | Nothing to commit
=========================================================================




==============================
(2) git add <fileName>  
------------------------------
-> This command is used to move untracked files to add in the queue (Stage)
-> use (.) dot instead of filename to add all the untracked files at ones. 



==============================
(3) git commit -m <message>
------------------------------
-> This command is used to move all the untracked files at stage into Tracked file.
-> This command commit all the changes and now we can finally push those changes on github repo.


==============================
(4) git push origin main
------------------------------
-> This command upload all the changes on the Gitthub Repo.
-> And the changes are finally reflect on teh github. 


------------------------------
(5) git log
 ------------------------------
-> This command is used to display all the history stored in the .git folder



     __________________________
     |____change_/_new-file___|   (modified/untracked)
                 |
          _______|________
          |_____add______|            (staged)
                 |
          _______|________
          |____commit____|           (unchanged)
                 |
          _______|________
          |____push______|           (Nothing to commit)
    
    




